image: 
  name: gcr.io/kaniko-project/executor:debug
  entrypoint: [""]

stages:
  - build_kaniko_test
  - build_kaniko_prod
  - deploy_test
  - deploy_prod
  

build_kaniko_test:
  stage: build_kaniko_test
  variables:
    IMAGE_DESTINATION: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
  only:
    - staging
  image:
      # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      entrypoint: [""]
  script:
      # Prepare Kaniko configuration file
      - echo $CI_REGISTRY_IMAGE
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      # Build and push the image from the Dockerfile at the root of the project.
      - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.test --destination $IMAGE_DESTINATION --cache-dir=/workspace/cache 
      # Print the full registry path of the pushed image
      - echo "Image pushed successfully to ${IMAGE_DESTINATION}"
      - echo "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"

build_kaniko_prod:
  stage: build_kaniko_test
  variables:
    IMAGE_DESTINATION: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
  only:
    - main
  image:
      # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      entrypoint: [""]
  script:
      # Prepare Kaniko configuration file
      - echo $CI_REGISTRY_IMAGE
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      # Build and push the image from the Dockerfile at the root of the project.
      - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_DESTINATION --cache-dir=/workspace/cache 
      # Print the full registry path of the pushed image
      - echo "Image pushed successfully to ${IMAGE_DESTINATION}"
      - echo "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"      

deploy_test:
  stage: deploy_test
  # image: kroniak/ssh-client
  image: docker
  services: 
    - docker:dind
  before_script:
    - echo "deploying app"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    # - echo "${TEST_SSH_KEY}" | ssh-add -
  only:
    - staging
  script:
    - apk add --update --no-cache openssh
    - chmod 400 $TEST_SSH_KEY
    - ssh -o StrictHostKeyChecking=no -i $TEST_SSH_KEY $TEST_USER@$TEST_SERVER_IP "docker login -u '$CI_REGISTRY_USER' -p '$CI_REGISTRY_PASSWORD' $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no -i $TEST_SSH_KEY $TEST_USER@$TEST_SERVER_IP "docker pull registry.gitlab.com/1itech_company_uz/yengil_kredit_frontend:test"
    - ssh -o StrictHostKeyChecking=no -i $TEST_SSH_KEY $TEST_USER@$TEST_SERVER_IP "docker stop yengil_front_test && docker rm yengil_front_test && docker run -e "REACT_APP_BASE_URL=https://test.api.yengilcredit.uz" -e "PORT=2929" -e "REACT_APP_MINIO_ENPOINT=https://test.minio.yengilcredit.uz" -p 2929:2929 --name yengil_front_test -d registry.gitlab.com/1itech_company_uz/yengil_kredit_frontend:test"


deploy_prod:
  stage: deploy_prod
  # image: kroniak/ssh-client
  image: docker
  services: 
    - docker:dind
  before_script:
    - echo "deploying app"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    # - echo "${SSH_PRIVATE_KEY}" | ssh-add -
  only:
    - main
  script:
    - apk add --update --no-cache openssh
    - chmod 400 $SSH_PRIVATE_KEY
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $USER@$PROD_SERVER_IP "docker login -u '$CI_REGISTRY_USER' -p '$CI_REGISTRY_PASSWORD' $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $USER@$PROD_SERVER_IP "docker pull registry.gitlab.com/1itech_company_uz/yengil_kredit_frontend:main"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $USER@$PROD_SERVER_IP "docker stop yengil_front && docker rm yengil_front && docker run -e "REACT_APP_BASE_URL=https://api.yengilcredit.uz" -e "PORT=1919" -e "REACT_APP_MINIO_ENPOINT=https://minio.yengilcredit.uz" -p 1919:1919 --name yengil_front -d registry.gitlab.com/1itech_company_uz/yengil_kredit_frontend:main"